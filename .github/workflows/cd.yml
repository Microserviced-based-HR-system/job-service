name: CD
on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: job-service
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Install kubectl
        uses: azure/setup-kubectl@v3.0
        with:
          version: "v1.24.0"
        id: install

      - name: Update kube config
        run: aws eks update-kubeconfig --name job-service --region ap-southeast-1

      - name: Apply K8 web configs
        run: |
          kubectl apply -f k8/web/aws-auth.yaml
          kubectl apply -f k8/web/configmap.yaml
          kubectl apply -f k8/web/deployment.yaml
          kubectl apply -f k8/web/service.yaml
          kubectl apply -f k8/web/ingress.yaml

      - name: Deploy to Kubernetes cluster
        run: kubectl rollout restart deployment job-service-deployment

      - name: Verify deployment to Kubernetes cluster
        run: kubectl get deployments job-service-deployment
