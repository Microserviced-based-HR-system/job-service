version: "3"
services:
  # Ruby on Rails application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: bundle exec rails s -p 3000 -e development -b '0.0.0.0'
    environment:
      PGHOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
      RAILS_ENV: development
      PGDBNAME: job_service_development
      LOGSTASH_HOST: logstash
    volumes:
      - .:/app
    # command: bundle exec rails s -p 3000 -b '0.0.0.0'
    ports:
      - "3000:3000"
    depends_on:
      - db
    logging:
      driver: gelf
      options:
        gelf-address: udp://localhost:12201

  # PostgreSQL database
  db:
    image: postgres:15
    environment:
      PGHOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
      RAILS_ENV: development
      PGDBNAME: job_service_development
    volumes:
      - "postgresDB:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    hostname: elasticsearch
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    hostname: kibana
    container_name: kibana
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_URL: http://elasticsearch:9200/
      ES_JAVA_OPTS: "-Xms1g -Xmx2g"
    ports:
      - 5601:5601
    links:
      - elasticsearch:elasticsearch
    depends_on:
      - elasticsearch

  logstash:
    build: ./logstash
    hostname: logstash
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    ports:
      - 5044:5044
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

volumes:
  postgresDB:
